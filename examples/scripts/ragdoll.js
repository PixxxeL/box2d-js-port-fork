// Generated by CoffeeScript 1.7.1
var ragdoll;

ragdoll = function() {
  var head, i, j, lower_arms, lower_legs, params, prefix, rjd, side, startX, startY, torsos, upper_arms, upper_legs, world, _i, _j, _k, _l, _m, _n, _o, _p;
  world = window.world;
  rjd = new b2RevoluteJointDef;
  for (i = _i = 0; _i <= 1; i = ++_i) {
    startX = 70 + Math.random() * 20 + 480 * i;
    startY = 20 + Math.random() * 50;
    prefix = i ? 'right' : 'left';
    head = addBody({
      name: "" + prefix + " head",
      x: startX,
      y: startY,
      radius: 12.5,
      friction: .4,
      restitution: .3,
      density: 1
    });
    head.ApplyImpulse(new b2Vec2(Math.random() * 5000000 - 2500000, Math.random() * 5000000 - 2500000), head.m_position);
    torsos = [];
    params = {
      x: startX,
      width: 30,
      height: 20,
      friction: .4,
      restitution: .1,
      density: 1
    };
    for (j = _j = 0; _j <= 2; j = ++_j) {
      params['name'] = "" + prefix + " torso " + (j + 1);
      params['y'] = startY + 28 + j * 15;
      torsos.push(addBody(params));
    }
    upper_arms = [];
    params = {
      y: startY + 30,
      width: 13,
      height: 36,
      friction: .4,
      restitution: .1,
      density: 1
    };
    for (j = _k = 0; _k <= 1; j = ++_k) {
      side = j ? 'right' : 'left';
      params['x'] = startX + (j ? 20 : -20);
      params['name'] = "" + prefix + " upper arms " + side;
      upper_arms.push(addBody(params));
    }
    lower_arms = [];
    params = {
      y: startY + 57,
      width: 12,
      height: 34,
      friction: .4,
      restitution: .1,
      density: 1
    };
    for (j = _l = 0; _l <= 1; j = ++_l) {
      side = j ? 'right' : 'left';
      params['x'] = startX + (j ? 20 : -20);
      params['name'] = "" + prefix + " lower arms " + side;
      lower_arms.push(addBody(params));
    }
    upper_legs = [];
    params = {
      y: startY + 85,
      width: 15,
      height: 44,
      friction: .4,
      restitution: .1,
      density: 1
    };
    for (j = _m = 0; _m <= 1; j = ++_m) {
      side = j ? 'right' : 'left';
      params['x'] = startX + (j ? 8 : -8);
      params['name'] = "" + prefix + " upper legs " + side;
      upper_legs.push(addBody(params));
    }
    lower_legs = [];
    params = {
      y: startY + 120,
      width: 12,
      height: 40,
      friction: .4,
      restitution: .1,
      density: 1
    };
    for (j = _n = 0; _n <= 1; j = ++_n) {
      side = j ? 'right' : 'left';
      params['x'] = startX + (j ? 8 : -8);
      params['name'] = "" + prefix + " lower legs " + side;
      lower_legs.push(addBody(params));
    }
    rjd.enableLimit = true;
    rjd.lowerAngle = -40 / TO_RAD;
    rjd.upperAngle = 40 / TO_RAD;
    rjd.Initialize(torsos[0], head, new b2Vec2(startX, startY + 15));
    world.CreateJoint(rjd);
    rjd.lowerAngle = -85 / TO_RAD;
    rjd.upperAngle = 130 / TO_RAD;
    rjd.Initialize(torsos[0], upper_arms[0], new b2Vec2(startX - 20, startY + 18));
    world.CreateJoint(rjd);
    rjd.lowerAngle = -130 / TO_RAD;
    rjd.upperAngle = 85 / TO_RAD;
    rjd.Initialize(torsos[0], upper_arms[1], new b2Vec2(startX + 20, startY + 18));
    world.CreateJoint(rjd);
    rjd.lowerAngle = -130 / TO_RAD;
    rjd.upperAngle = 10 / TO_RAD;
    rjd.Initialize(upper_arms[0], lower_arms[0], new b2Vec2(startX - 20, startY + 45));
    world.CreateJoint(rjd);
    rjd.lowerAngle = -10 / TO_RAD;
    rjd.upperAngle = 130 / TO_RAD;
    rjd.Initialize(upper_arms[1], lower_arms[1], new b2Vec2(startX + 20, startY + 45));
    world.CreateJoint(rjd);
    rjd.lowerAngle = -15 / TO_RAD;
    rjd.upperAngle = 15 / TO_RAD;
    rjd.Initialize(torsos[0], torsos[1], new b2Vec2(startX, startY + 30));
    world.CreateJoint(rjd);
    rjd.Initialize(torsos[1], torsos[2], new b2Vec2(startX, startY + 50));
    world.CreateJoint(rjd);
    rjd.lowerAngle = -25 / TO_RAD;
    rjd.upperAngle = 45 / TO_RAD;
    rjd.Initialize(torsos[2], upper_legs[0], new b2Vec2(startX - 8, startY + 72));
    world.CreateJoint(rjd);
    rjd.lowerAngle = -45 / TO_RAD;
    rjd.upperAngle = 25 / TO_RAD;
    rjd.Initialize(torsos[2], upper_legs[1], new b2Vec2(startX + 8, startY + 72));
    world.CreateJoint(rjd);
    rjd.lowerAngle = -25 / TO_RAD;
    rjd.upperAngle = 115 / TO_RAD;
    rjd.Initialize(upper_legs[0], lower_legs[0], new b2Vec2(startX - 8, startY + 105));
    world.CreateJoint(rjd);
    rjd.lowerAngle = -115 / TO_RAD;
    rjd.upperAngle = 25 / TO_RAD;
    rjd.Initialize(upper_legs[1], lower_legs[1], new b2Vec2(startX + 8, startY + 105));
    world.CreateJoint(rjd);
  }
  params = {
    height: 20,
    friction: .4,
    restitution: .3
  };
  for (i = _o = 1; _o <= 10; i = ++_o) {
    params['name'] = "left stair " + i;
    params['x'] = 10 + 10 * i;
    params['y'] = 260 + 20 * i;
    params['width'] = 20 * i;
    addBody(params);
  }
  for (i = _p = 1; _p <= 10; i = ++_p) {
    params['name'] = "right stair " + i;
    params['x'] = 630 - 10 * i;
    params['y'] = 260 + 20 * i;
    params['width'] = 20 * i;
    addBody(params);
  }
  return addBody({
    x: 320,
    y: 420,
    width: 50,
    height: 100,
    friction: .4,
    restitution: .3
  });
};
